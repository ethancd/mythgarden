# Generated by Django 4.1.5 on 2023-04-21 16:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mythgarden', '0069_knowledge_remove_item_icon_alter_achievement_name_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='achievement',
            name='mythegg',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mythgarden.mythling'),
        ),
        migrations.AddField(
            model_name='herostate',
            name='depth_weighted_hearts_earned',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='herostate',
            name='fishing_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='herostate',
            name='foraging_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='herostate',
            name='mining_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='herostate',
            name='mytheggs_found',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='mythling',
            name='source_location',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mythegg', to='mythgarden.place'),
        ),
        migrations.AlterField(
            model_name='achievement',
            name='achievement_type',
            field=models.CharField(choices=[('ALL_VILLAGERS_HEARTS', 'All villagers hearts'), ('BALANCED_INCOME', 'Balanced income'), ('BESTEST_FRIENDS', 'Bestest friends'), ('BEST_FRIENDS', 'Best friends'), ('DISCOVER_MYTHEGG', 'Discover mythegg'), ('FARMING_INTAKE', 'Farming intake'), ('FASTEST_FRIENDS', 'Fastest friends'), ('FAST_CASH', 'Fast cash'), ('FAST_FRIENDS', 'Fast friends'), ('FAST_MYTHEGG', 'Fast mythegg'), ('FISHING_INTAKE', 'Fishing intake'), ('FORAGING_INTAKE', 'Foraging intake'), ('GROSS_INCOME', 'Gross income'), ('HIGH_SCORE', 'High score'), ('MINING_INTAKE', 'Mining intake'), ('MULTIPLE_BEST_FRIENDS', 'Multiple best friends'), ('MULTIPLE_MYTHEGGS', 'Multiple mytheggs'), ('STEADFASTEST_FRIENDS', 'Steadfastest friends'), ('STEADFAST_FRIENDS', 'Steadfast friends')], max_length=24),
        ),
        migrations.AlterField(
            model_name='achievement',
            name='trigger_type',
            field=models.CharField(choices=[('EARN_MONEY', 'Earn money'), ('FIND_MYTHEGG', 'Find mythegg'), ('GAIN_ACHIEVEMENT', 'Gain achievement'), ('GAIN_HEARTS', 'Gain hearts'), ('GATHER', 'Gather'), ('HARVEST', 'Harvest'), ('SCORE_POINTS', 'Score points'), ('TALK_TO_VILLAGERS', 'Talk to villagers')], max_length=24),
        ),
        migrations.AlterField(
            model_name='dialogueline',
            name='trigger',
            field=models.CharField(choices=[('LOVED_GIFT', 'Loved Gift'), ('LIKED_GIFT', 'Liked Gift'), ('NEUTRAL_GIFT', 'Neutral Gift'), ('DISLIKED_GIFT', 'Disliked Gift'), ('HATED_GIFT', 'Hated Gift'), ('FIRST_MEETING', 'First Meeting'), ('TALKED_TO', 'Talked To'), ('GRANTING_MYTHEGG', 'Granting Mythegg')], default='TALKED_TO', max_length=16),
        ),
        migrations.AlterField(
            model_name='knowledge',
            name='knowledge_type',
            field=models.CharField(choices=[('ITEM_KNOWLEDGE', 'Item knowledge'), ('VILLAGER_KNOWLEDGE', 'Villager knowledge'), ('MYTHEGG_KNOWLEDGE', 'Mythegg knowledge'), ('MYTHLING_POWER_KNOWLEDGE', 'Mythling power knowledge')], max_length=24),
        ),
        migrations.AlterField(
            model_name='knowledge',
            name='unlocking_achievement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unlocked_knowledge', to='mythgarden.achievement'),
        ),
        migrations.CreateModel(
            name='MythlingState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_been_found', models.BooleanField(default=False)),
                ('deferred_acquire', models.BooleanField(default=False)),
                ('mythling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='mythgarden.mythling')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mythling_states', to='mythgarden.session')),
            ],
        ),
        migrations.CreateModel(
            name='MythlingPowerKnowledge',
            fields=[
                ('knowledge_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mythgarden.knowledge')),
                ('mythling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mythgarden.mythling')),
            ],
            bases=('mythgarden.knowledge',),
        ),
    ]
